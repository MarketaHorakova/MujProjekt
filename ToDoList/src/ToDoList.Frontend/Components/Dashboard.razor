@using ToDoList.Frontend.Views
@using ToDoList.Frontend.Clients
@inject IToDoItemsClient ToDoItemsClient
@rendermode InteractiveServer
@page "/Dashboard"

<h2>Dashboard</h2>

<table>
    <tr>
        <td><select @bind="ascDesc">
                <option value="asc">Seřadit vzestupně</option>
                <option value="desc">Seřadit sestupně</option>
            </select>
        </td>
    </tr>
    <tr>
        <td><button @onclick="OrderById">Seřadit podle ID</button></td>
        <td><button @onclick="OrderByName">Seřadit podle Jmena</button></td>
        <td><button @onclick="OrderByDescription">Seřadit podle Description</button></td>
        <td><button @onclick="OrderByIsCompleted">Seřadit podle uplnosti</button></td>
    </tr>

    @foreach (var toDoItem in toDoItems)
    {
        <tr>
            <td>@toDoItem.ToDoItemId</td>
            <td>@toDoItem.Name</td>
            <td>@toDoItem.Description</td>
            <td>@toDoItem.IsCompleted</td>
        </tr>
    }
</table>


@code
{
    protected override async Task OnInitializedAsync()
    {
        toDoItems = await ToDoItemsClient.ReadItemsAsync();
    }

    private List<ToDoItemView>? toDoItems = [];

    public void OrderByName()
    {
        toDoItems = toDoItems?.OrderBy(item => item.Name).ToList();
    }
    public void OrderById()
    {
        toDoItems = toDoItems?.OrderBy(item => item.ToDoItemId).ToList();
    }

    private string ascDesc { get; set; }

    public void OrderByDescription()
    {
        if (ascDesc == "asc")
        {
            toDoItems = toDoItems.OrderBy(d => d.Description).ToList();
        }
        else
        {
            toDoItems = toDoItems.OrderByDescending(d => d.Description).ToList();
        }

    }

    public void OrderByIsCompleted()
    {
        if (ascDesc == "asc")
        {
            toDoItems = toDoItems.OrderBy(b => b.IsCompleted).ToList();
        }
        else
        {
            toDoItems = toDoItems.OrderByDescending(b => b.IsCompleted).ToList();
        }
    }
}
